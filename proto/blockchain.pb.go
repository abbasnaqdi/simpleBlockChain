// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/blockchain.proto

package protopkg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Block struct {
	PrvHash              string   `protobuf:"bytes,1,opt,name=prvHash,proto3" json:"prvHash,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_773592b98f5dec9e, []int{0}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetPrvHash() string {
	if m != nil {
		return m.PrvHash
	}
	return ""
}

func (m *Block) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type BlockRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_773592b98f5dec9e, []int{1}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (dst *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(dst, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type BlockResponce struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockResponce) Reset()         { *m = BlockResponce{} }
func (m *BlockResponce) String() string { return proto.CompactTextString(m) }
func (*BlockResponce) ProtoMessage()    {}
func (*BlockResponce) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_773592b98f5dec9e, []int{2}
}
func (m *BlockResponce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponce.Unmarshal(m, b)
}
func (m *BlockResponce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponce.Marshal(b, m, deterministic)
}
func (dst *BlockResponce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponce.Merge(dst, src)
}
func (m *BlockResponce) XXX_Size() int {
	return xxx_messageInfo_BlockResponce.Size(m)
}
func (m *BlockResponce) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponce.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponce proto.InternalMessageInfo

func (m *BlockResponce) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type ChainRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainRequest) Reset()         { *m = ChainRequest{} }
func (m *ChainRequest) String() string { return proto.CompactTextString(m) }
func (*ChainRequest) ProtoMessage()    {}
func (*ChainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_773592b98f5dec9e, []int{3}
}
func (m *ChainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainRequest.Unmarshal(m, b)
}
func (m *ChainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainRequest.Marshal(b, m, deterministic)
}
func (dst *ChainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainRequest.Merge(dst, src)
}
func (m *ChainRequest) XXX_Size() int {
	return xxx_messageInfo_ChainRequest.Size(m)
}
func (m *ChainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChainRequest proto.InternalMessageInfo

type ChainResponce struct {
	Blocks               []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainResponce) Reset()         { *m = ChainResponce{} }
func (m *ChainResponce) String() string { return proto.CompactTextString(m) }
func (*ChainResponce) ProtoMessage()    {}
func (*ChainResponce) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_773592b98f5dec9e, []int{4}
}
func (m *ChainResponce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainResponce.Unmarshal(m, b)
}
func (m *ChainResponce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainResponce.Marshal(b, m, deterministic)
}
func (dst *ChainResponce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainResponce.Merge(dst, src)
}
func (m *ChainResponce) XXX_Size() int {
	return xxx_messageInfo_ChainResponce.Size(m)
}
func (m *ChainResponce) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainResponce.DiscardUnknown(m)
}

var xxx_messageInfo_ChainResponce proto.InternalMessageInfo

func (m *ChainResponce) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func init() {
	proto.RegisterType((*Block)(nil), "protopkg.Block")
	proto.RegisterType((*BlockRequest)(nil), "protopkg.BlockRequest")
	proto.RegisterType((*BlockResponce)(nil), "protopkg.BlockResponce")
	proto.RegisterType((*ChainRequest)(nil), "protopkg.ChainRequest")
	proto.RegisterType((*ChainResponce)(nil), "protopkg.ChainResponce")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockChainClient is the client API for BlockChain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockChainClient interface {
	AddBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockResponce, error)
	GetChain(ctx context.Context, in *ChainRequest, opts ...grpc.CallOption) (*ChainResponce, error)
}

type blockChainClient struct {
	cc *grpc.ClientConn
}

func NewBlockChainClient(cc *grpc.ClientConn) BlockChainClient {
	return &blockChainClient{cc}
}

func (c *blockChainClient) AddBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*BlockResponce, error) {
	out := new(BlockResponce)
	err := c.cc.Invoke(ctx, "/protopkg.BlockChain/AddBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockChainClient) GetChain(ctx context.Context, in *ChainRequest, opts ...grpc.CallOption) (*ChainResponce, error) {
	out := new(ChainResponce)
	err := c.cc.Invoke(ctx, "/protopkg.BlockChain/GetChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockChainServer is the server API for BlockChain service.
type BlockChainServer interface {
	AddBlock(context.Context, *BlockRequest) (*BlockResponce, error)
	GetChain(context.Context, *ChainRequest) (*ChainResponce, error)
}

func RegisterBlockChainServer(s *grpc.Server, srv BlockChainServer) {
	s.RegisterService(&_BlockChain_serviceDesc, srv)
}

func _BlockChain_AddBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).AddBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protopkg.BlockChain/AddBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).AddBlock(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockChain_GetChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockChainServer).GetChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protopkg.BlockChain/GetChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockChainServer).GetChain(ctx, req.(*ChainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockChain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protopkg.BlockChain",
	HandlerType: (*BlockChainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddBlock",
			Handler:    _BlockChain_AddBlock_Handler,
		},
		{
			MethodName: "GetChain",
			Handler:    _BlockChain_GetChain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/blockchain.proto",
}

func init() { proto.RegisterFile("proto/blockchain.proto", fileDescriptor_blockchain_773592b98f5dec9e) }

var fileDescriptor_blockchain_773592b98f5dec9e = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xca, 0xc9, 0x4f, 0xce, 0x4e, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x03, 0x0b, 0x08,
	0x71, 0x80, 0xa9, 0x82, 0xec, 0x74, 0x25, 0x4f, 0x2e, 0x56, 0x27, 0x90, 0xac, 0x90, 0x04, 0x17,
	0x7b, 0x41, 0x51, 0x99, 0x47, 0x62, 0x71, 0x86, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x8c,
	0x2b, 0x24, 0xc4, 0xc5, 0x92, 0x92, 0x58, 0x92, 0x28, 0xc1, 0x04, 0x16, 0x06, 0xb3, 0x41, 0x62,
	0x19, 0x20, 0xa5, 0xcc, 0x10, 0x31, 0x10, 0x5b, 0x49, 0x89, 0x8b, 0x07, 0x6c, 0x54, 0x50, 0x6a,
	0x61, 0x69, 0x6a, 0x71, 0x09, 0x5c, 0x1f, 0x23, 0x42, 0x9f, 0x92, 0x32, 0x17, 0x2f, 0x54, 0x4d,
	0x71, 0x41, 0x7e, 0x5e, 0x72, 0x2a, 0xdc, 0x20, 0x46, 0x24, 0x83, 0xf8, 0xb8, 0x78, 0x9c, 0x41,
	0x8e, 0x85, 0x1a, 0xa4, 0x64, 0xc1, 0xc5, 0x0b, 0xe5, 0x43, 0x35, 0xa9, 0x73, 0xb1, 0x81, 0xbd,
	0x54, 0x2c, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x6d, 0xc4, 0xaf, 0x07, 0xf3, 0x8f, 0x1e, 0xc4, 0x74,
	0xa8, 0xb4, 0x51, 0x17, 0x23, 0x17, 0x17, 0x58, 0x04, 0xac, 0x5f, 0xc8, 0x96, 0x8b, 0xc3, 0x31,
	0x25, 0x05, 0xe2, 0x5f, 0x31, 0x74, 0x3d, 0x10, 0xcb, 0xa4, 0xc4, 0x31, 0xc4, 0x21, 0x96, 0x2a,
	0x31, 0x80, 0xb4, 0xbb, 0xa7, 0x96, 0x40, 0x8c, 0x42, 0xd2, 0x8e, 0xec, 0x56, 0x64, 0xed, 0x28,
	0x6e, 0x56, 0x62, 0x48, 0x62, 0x03, 0xcb, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xc1,
	0xc9, 0x45, 0x95, 0x01, 0x00, 0x00,
}
